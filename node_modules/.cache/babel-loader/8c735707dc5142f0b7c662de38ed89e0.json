{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Dominik Peric\\\\Documents\\\\MyProjects\\\\sorting-animation\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"C:\\\\Users\\\\Dominik Peric\\\\Documents\\\\MyProjects\\\\sorting-animation\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Dominik Peric\\\\Documents\\\\MyProjects\\\\sorting-animation\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";var numOfComparisons=0;var numOfSwaps=0;/* insertion sort utility */ // set a timeout using a promise\nvar wait=function wait(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};// initiates insertion sort methods\nvar InsertionSortUtility=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(stateArray,speed){var copyArr,animateArr;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:copyArr=JSON.parse(JSON.stringify(stateArray));animateArr=insertionSortAlgorithm(copyArr);_context.next=4;return insertionSortAnimation(animateArr,speed);case 4:return _context.abrupt(\"return\",[numOfComparisons,numOfSwaps]);case 5:case\"end\":return _context.stop();}}},_callee);}));return function InsertionSortUtility(_x,_x2){return _ref.apply(this,arguments);};}();// performs insertion sort on array\nvar insertionSortAlgorithm=function insertionSortAlgorithm(arr){var length=arr.length;var animations=[];sort(arr,length,animations);return animations;};// algorithm for insertion sort\nvar sort=function sort(arr,length,animations){for(var i=1;i<length;i++){var j=i;numOfComparisons++;animations.push([j-1,j,true,false]);// highlight animation\nanimations.push([j-1,j,false,false]);// un-highlight animation\nif(arr[j].value>=arr[j-1].value){/* do nothing */}else{while(j>0&&arr[j].value<arr[j-1].value){numOfComparisons++;numOfSwaps++;animations.push([j-1,j,true,false]);// highlight animation\nanimations.push([j-1,j,true,true]);// swap animation\nvar temp=arr[j].value;arr[j].value=arr[j-1].value;arr[j-1].value=temp;animations.push([j-1,j,false,false]);// un-highlight animation\nj=j-1;}}}return animations;};// performs insertion sort animation\nvar insertionSortAnimation=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(animateArr,speed){var numC,numS,i;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:numC={value:0};numS={value:0};for(i=0;i<animateArr.length;i++){// perform animations\n_animate(animateArr,speed,i,numC,numS);}_context2.next=5;return wait(animateArr.length*speed*2);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function insertionSortAnimation(_x3,_x4){return _ref2.apply(this,arguments);};}();// perform highlight, un-highlight, or swap animation\nvar _animate=function _animate(animateArr,speed,i,numC,numS){(function(index){setTimeout(function(){var blockArray=document.getElementsByClassName('block');var _animateArr$i=_slicedToArray(animateArr[i],4),curr=_animateArr$i[0],next=_animateArr$i[1],isCompare=_animateArr$i[2],isSwap=_animateArr$i[3];if(isCompare===true&&isSwap===false){// highlight animation\nsetTimeout(function(){numC.value++;document.getElementById(\"Comparisons\").innerHTML=\"\"+numC.value;blockArray[curr].style.backgroundColor='red';blockArray[next].style.backgroundColor='red';},index*speed);}else if(isCompare===false&&isSwap===false){// un-highlight animation\nsetTimeout(function(){blockArray[curr].style.backgroundColor='#282c34';blockArray[next].style.backgroundColor='#282c34';},index*speed);}else if(isCompare===true&&isSwap===true){// swap animation\nsetTimeout(function(){numS.value++;document.getElementById(\"Swaps\").innerHTML=\"\"+numS.value;var currHeight=blockArray[next].style.height;var nextHeight=blockArray[curr].style.height;blockArray[curr].style.height=currHeight;blockArray[next].style.height=nextHeight;blockArray[curr].style.height=currHeight+'px';blockArray[next].style.height=nextHeight+'px';},index*speed);}},index*speed);})(i);};export default InsertionSortUtility;","map":{"version":3,"sources":["C:/Users/Dominik Peric/Documents/MyProjects/sorting-animation/src/Utilities/InsertionSortUtility.js"],"names":["numOfComparisons","numOfSwaps","wait","ms","Promise","resolve","setTimeout","InsertionSortUtility","stateArray","speed","copyArr","JSON","parse","stringify","animateArr","insertionSortAlgorithm","insertionSortAnimation","arr","length","animations","sort","i","j","push","value","temp","numC","numS","_animate","index","blockArray","document","getElementsByClassName","curr","next","isCompare","isSwap","getElementById","innerHTML","style","backgroundColor","currHeight","height","nextHeight"],"mappings":"ujBAAA,GAAIA,CAAAA,gBAAgB,CAAG,CAAvB,CACA,GAAIC,CAAAA,UAAU,CAAG,CAAjB,CACA,4B,CAEA;AACA,GAAIC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAAAC,EAAE,QAAI,IAAIC,CAAAA,OAAJ,CAAY,SAAAC,OAAO,QAAIC,CAAAA,UAAU,CAACD,OAAD,CAAUF,EAAV,CAAd,EAAnB,CAAJ,EAAb,CAEA;AACA,GAAMI,CAAAA,oBAAoB,0FAAG,iBAAOC,UAAP,CAAmBC,KAAnB,yIACrBC,OADqB,CACXC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,UAAf,CAAX,CADW,CAErBM,UAFqB,CAERC,sBAAsB,CAACL,OAAD,CAFd,uBAGnBM,CAAAA,sBAAsB,CAACF,UAAD,CAAaL,KAAb,CAHH,wCAIlB,CAACT,gBAAD,CAAmBC,UAAnB,CAJkB,wDAAH,kBAApBM,CAAAA,oBAAoB,gDAA1B,CAOA;AACA,GAAMQ,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACE,GAAD,CAAS,CACpC,GAAIC,CAAAA,MAAM,CAAGD,GAAG,CAACC,MAAjB,CACA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACAC,IAAI,CAACH,GAAD,CAAMC,MAAN,CAAcC,UAAd,CAAJ,CACA,MAAOA,CAAAA,UAAP,CACH,CALD,CAOA;AACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACH,GAAD,CAAMC,MAAN,CAAcC,UAAd,CAA6B,CACtC,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,MAApB,CAA4BG,CAAC,EAA7B,CAAiC,CAC7B,GAAIC,CAAAA,CAAC,CAAGD,CAAR,CACArB,gBAAgB,GAChBmB,UAAU,CAACI,IAAX,CAAgB,CAACD,CAAC,CAAC,CAAH,CAAMA,CAAN,CAAS,IAAT,CAAe,KAAf,CAAhB,EAAwC;AACxCH,UAAU,CAACI,IAAX,CAAgB,CAACD,CAAC,CAAC,CAAH,CAAMA,CAAN,CAAS,KAAT,CAAgB,KAAhB,CAAhB,EAAwC;AACxC,GAAIL,GAAG,CAACK,CAAD,CAAH,CAAOE,KAAP,EAAgBP,GAAG,CAACK,CAAC,CAAC,CAAH,CAAH,CAASE,KAA7B,CAAoC,CAAE,gBAAkB,CAAxD,IACK,CACD,MAAOF,CAAC,CAAG,CAAJ,EAASL,GAAG,CAACK,CAAD,CAAH,CAAOE,KAAP,CAAeP,GAAG,CAACK,CAAC,CAAC,CAAH,CAAH,CAASE,KAAxC,CAA+C,CAC3CxB,gBAAgB,GAChBC,UAAU,GACVkB,UAAU,CAACI,IAAX,CAAgB,CAACD,CAAC,CAAC,CAAH,CAAMA,CAAN,CAAS,IAAT,CAAe,KAAf,CAAhB,EAAuC;AACvCH,UAAU,CAACI,IAAX,CAAgB,CAACD,CAAC,CAAC,CAAH,CAAMA,CAAN,CAAS,IAAT,CAAe,IAAf,CAAhB,EAAsC;AACtC,GAAIG,CAAAA,IAAI,CAAGR,GAAG,CAACK,CAAD,CAAH,CAAOE,KAAlB,CACAP,GAAG,CAACK,CAAD,CAAH,CAAOE,KAAP,CAAeP,GAAG,CAACK,CAAC,CAAC,CAAH,CAAH,CAASE,KAAxB,CACAP,GAAG,CAACK,CAAC,CAAC,CAAH,CAAH,CAASE,KAAT,CAAiBC,IAAjB,CACAN,UAAU,CAACI,IAAX,CAAgB,CAACD,CAAC,CAAC,CAAH,CAAMA,CAAN,CAAS,KAAT,CAAgB,KAAhB,CAAhB,EAAwC;AACxCA,CAAC,CAAGA,CAAC,CAAG,CAAR,CACH,CACJ,CACJ,CACD,MAAOH,CAAAA,UAAP,CACH,CAtBD,CAwBA;AACA,GAAMH,CAAAA,sBAAsB,2FAAG,kBAAOF,UAAP,CAAmBL,KAAnB,sIACvBiB,IADuB,CAChB,CAAEF,KAAK,CAAE,CAAT,CADgB,CAEvBG,IAFuB,CAEhB,CAAEH,KAAK,CAAE,CAAT,CAFgB,CAG3B,IAASH,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGP,UAAU,CAACI,MAA/B,CAAuCG,CAAC,EAAxC,CAA4C,CAAE;AAC1CO,QAAQ,CAACd,UAAD,CAAaL,KAAb,CAAoBY,CAApB,CAAuBK,IAAvB,CAA6BC,IAA7B,CAAR,CACH,CAL0B,uBAMrBzB,CAAAA,IAAI,CAACY,UAAU,CAACI,MAAX,CAAoBT,KAApB,CAA4B,CAA7B,CANiB,yDAAH,kBAAtBO,CAAAA,sBAAsB,kDAA5B,CASA;AACA,GAAMY,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACd,UAAD,CAAaL,KAAb,CAAoBY,CAApB,CAAuBK,IAAvB,CAA6BC,IAA7B,CAAsC,CACnD,CAAC,SAASE,KAAT,CAAgB,CACbvB,UAAU,CAAC,UAAW,CAClB,GAAIwB,CAAAA,UAAU,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,CAAjB,CADkB,iCAEoBlB,UAAU,CAACO,CAAD,CAF9B,IAEbY,IAFa,kBAEPC,IAFO,kBAEDC,SAFC,kBAEUC,MAFV,kBAGlB,GAAID,SAAS,GAAK,IAAd,EAAsBC,MAAM,GAAK,KAArC,CAA4C,CAAE;AAC1C9B,UAAU,CAAC,UAAW,CAClBoB,IAAI,CAACF,KAAL,GACAO,QAAQ,CAACM,cAAT,CAAwB,aAAxB,EAAuCC,SAAvC,CAAmD,GAAKZ,IAAI,CAACF,KAA7D,CACAM,UAAU,CAACG,IAAD,CAAV,CAAiBM,KAAjB,CAAuBC,eAAvB,CAAyC,KAAzC,CACAV,UAAU,CAACI,IAAD,CAAV,CAAiBK,KAAjB,CAAuBC,eAAvB,CAAyC,KAAzC,CACH,CALS,CAKPX,KAAK,CAAGpB,KALD,CAAV,CAMH,CAPD,IAQK,IAAI0B,SAAS,GAAK,KAAd,EAAuBC,MAAM,GAAK,KAAtC,CAA6C,CAAE;AAChD9B,UAAU,CAAC,UAAW,CAClBwB,UAAU,CAACG,IAAD,CAAV,CAAiBM,KAAjB,CAAuBC,eAAvB,CAAyC,SAAzC,CACAV,UAAU,CAACI,IAAD,CAAV,CAAiBK,KAAjB,CAAuBC,eAAvB,CAAyC,SAAzC,CACH,CAHS,CAGPX,KAAK,CAAGpB,KAHD,CAAV,CAIH,CALI,IAMA,IAAI0B,SAAS,GAAK,IAAd,EAAsBC,MAAM,GAAK,IAArC,CAA2C,CAAE;AAC9C9B,UAAU,CAAC,UAAW,CAClBqB,IAAI,CAACH,KAAL,GACAO,QAAQ,CAACM,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,CAA6C,GAAKX,IAAI,CAACH,KAAvD,CACA,GAAIiB,CAAAA,UAAU,CAAGX,UAAU,CAACI,IAAD,CAAV,CAAiBK,KAAjB,CAAuBG,MAAxC,CACA,GAAIC,CAAAA,UAAU,CAAGb,UAAU,CAACG,IAAD,CAAV,CAAiBM,KAAjB,CAAuBG,MAAxC,CACAZ,UAAU,CAACG,IAAD,CAAV,CAAiBM,KAAjB,CAAuBG,MAAvB,CAAgCD,UAAhC,CACAX,UAAU,CAACI,IAAD,CAAV,CAAiBK,KAAjB,CAAuBG,MAAvB,CAAgCC,UAAhC,CACAb,UAAU,CAACG,IAAD,CAAV,CAAiBM,KAAjB,CAAuBG,MAAvB,CAAgCD,UAAU,CAAC,IAA3C,CACAX,UAAU,CAACI,IAAD,CAAV,CAAiBK,KAAjB,CAAuBG,MAAvB,CAAgCC,UAAU,CAAC,IAA3C,CACH,CATS,CASPd,KAAK,CAAGpB,KATD,CAAV,CAUH,CACJ,CA7BS,CA6BNoB,KAAD,CAAUpB,KA7BH,CAAV,CA8BH,CA/BD,EA+BGY,CA/BH,EAgCH,CAjCD,CAmCA,cAAed,CAAAA,oBAAf","sourcesContent":["let numOfComparisons = 0;\nlet numOfSwaps = 0;\n/* insertion sort utility */\n\n// set a timeout using a promise\nlet wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n// initiates insertion sort methods\nconst InsertionSortUtility = async (stateArray, speed) => {\n    let copyArr = JSON.parse(JSON.stringify(stateArray));\n    let animateArr = insertionSortAlgorithm(copyArr);\n    await insertionSortAnimation(animateArr, speed);\n    return [numOfComparisons, numOfSwaps];  \n}\n\n// performs insertion sort on array\nconst insertionSortAlgorithm = (arr) => {\n    let length = arr.length;\n    let animations = [];\n    sort(arr, length, animations); \n    return animations;\n}\n\n// algorithm for insertion sort\nconst sort = (arr, length, animations) => {\n    for (let i = 1; i < length; i++) {\n        let j = i;\n        numOfComparisons++;\n        animations.push([j-1, j, true, false]); // highlight animation\n        animations.push([j-1, j, false, false]) // un-highlight animation\n        if (arr[j].value >= arr[j-1].value) { /* do nothing */ }\n        else {\n            while (j > 0 && arr[j].value < arr[j-1].value) {\n                numOfComparisons++;\n                numOfSwaps++;\n                animations.push([j-1, j, true, false]) // highlight animation\n                animations.push([j-1, j, true, true]) // swap animation\n                let temp = arr[j].value;\n                arr[j].value = arr[j-1].value;\n                arr[j-1].value = temp;\n                animations.push([j-1, j, false, false]) // un-highlight animation\n                j = j - 1;\n            }\n        }\n    }\n    return animations;\n}\n\n// performs insertion sort animation\nconst insertionSortAnimation = async (animateArr, speed) => {\n    var numC = { value: 0 };\n    var numS = { value: 0 };\n    for (let i = 0; i < animateArr.length; i++) { // perform animations\n        _animate(animateArr, speed, i, numC, numS);\n    }\n    await wait(animateArr.length * speed * 2); // wait till all animations are done\n}\n\n// perform highlight, un-highlight, or swap animation\nconst _animate = (animateArr, speed, i, numC, numS) => {\n    (function(index) {\n        setTimeout(function() {\n            let blockArray = document.getElementsByClassName('block');\n            let [curr, next, isCompare, isSwap] = animateArr[i];\n            if (isCompare === true && isSwap === false) { // highlight animation\n                setTimeout(function() {\n                    numC.value++;\n                    document.getElementById(\"Comparisons\").innerHTML = \"\" + numC.value;\n                    blockArray[curr].style.backgroundColor = 'red';\n                    blockArray[next].style.backgroundColor = 'red';\n                }, index * speed);\n            }\n            else if (isCompare === false && isSwap === false) { // un-highlight animation\n                setTimeout(function() {\n                    blockArray[curr].style.backgroundColor = '#282c34';\n                    blockArray[next].style.backgroundColor = '#282c34';\n                }, index * speed);\n            }\n            else if (isCompare === true && isSwap === true) { // swap animation\n                setTimeout(function() {\n                    numS.value++;\n                    document.getElementById(\"Swaps\").innerHTML = \"\" + numS.value;\n                    let currHeight = blockArray[next].style.height;\n                    let nextHeight = blockArray[curr].style.height;\n                    blockArray[curr].style.height = currHeight;\n                    blockArray[next].style.height = nextHeight;\n                    blockArray[curr].style.height = currHeight+'px';\n                    blockArray[next].style.height = nextHeight+'px';\n                }, index * speed);\n            }\n        }, (index) * speed);\n    })(i)\n}\n\nexport default InsertionSortUtility;"]},"metadata":{},"sourceType":"module"}