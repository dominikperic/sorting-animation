{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Dominik Peric\\\\Documents\\\\MyProjects\\\\sorting-animation\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"C:\\\\Users\\\\Dominik Peric\\\\Documents\\\\MyProjects\\\\sorting-animation\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Dominik Peric\\\\Documents\\\\MyProjects\\\\sorting-animation\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";var numOfComparisons=0;var numOfSwaps=0;/* quick sort utility */ // set a timeout using a promise\nvar wait=function wait(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};// initiates quick sort methods\nvar QuickSortUtility=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(stateArray,speed){var copyArr,animateArr;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:copyArr=JSON.parse(JSON.stringify(stateArray));animateArr=quickSortAlgorithm(copyArr);_context.next=4;return quickSortAnimation(animateArr,speed);case 4:return _context.abrupt(\"return\",[numOfComparisons,numOfSwaps]);case 5:case\"end\":return _context.stop();}}},_callee);}));return function QuickSortUtility(_x,_x2){return _ref.apply(this,arguments);};}();// performs quick sort on array\nvar quickSortAlgorithm=function quickSortAlgorithm(arr){var length=arr.length;var animations=[];sort(arr,0,length-1,animations);return animations;};// algorithm for quick sort\nvar sort=function sort(arr,low,high,animations){if(low<high){// pi is partitioning index\nvar pi=partition(arr,low,high,animations);// sort elements before partition and after partition \nsort(arr,low,pi-1,animations);sort(arr,pi+1,high,animations);}};// sort partitioned array\nvar partition=function partition(arr,low,high,animations){var pivot=arr[high].value;var i=low-1;var isLess=false;// animations.push([high, high, false, true]) // highlight (NOTE: Uncomment if highlighting partition index is desired)\nfor(var j=low;j<high;j++){animations.push([j,i+1,true,false]);// highlight animation\nnumOfComparisons++;if(arr[j].value<pivot){numOfSwaps++;isLess=true;i++;// swap arr[i] and arr[j] \nvar _temp=arr[i].value;arr[i].value=arr[j].value;arr[j].value=_temp;animations.push([j,i,true,true]);// swap animation\n}if(!isLess){animations.push([j,i+1,false,false]);// un-highlight animation\n}else{animations.push([j,i,false,false]);// un-highlight animation\n}}numOfSwaps++;/* animations.push([i+1, high, true, false]) // highlight animation (NOTE: Uncomment if highlighting swap is desired) */ // swap arr[i+1] and arr[high] (or pivot) \nvar temp=arr[i+1].value;arr[i+1].value=arr[high].value;arr[high].value=temp;animations.push([i+1,high,true,true]);// swap animation\nanimations.push([i+1,high,false,false]);// un-highlight animation\n/* animations.push([j, i+1, false, false]) // un-highlight animation (NOTE: Uncomment if highlighting swap is desired) */return i+1;};// performs quick sort animation\nvar quickSortAnimation=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(animateArr,speed){var numC,numS,i;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:numC={value:0};numS={value:0};for(i=0;i<animateArr.length;i++){// perform animations\n_animate(animateArr,speed,i,numC,numS);}_context2.next=5;return wait(animateArr.length*speed*2);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function quickSortAnimation(_x3,_x4){return _ref2.apply(this,arguments);};}();// perform highlight, un-highlight, or swap animation\nvar _animate=function _animate(animateArr,speed,i,numC,numS){(function(index){setTimeout(function(){var blockArray=document.getElementsByClassName('block');var _animateArr$i=_slicedToArray(animateArr[i],4),curr=_animateArr$i[0],next=_animateArr$i[1],isCompare=_animateArr$i[2],isSwap=_animateArr$i[3];if(isCompare===true&&isSwap===false){// highlight animation\nsetTimeout(function(){numC.value++;document.getElementById(\"Comparisons\").innerHTML=\"\"+numC.value;blockArray[curr].style.backgroundColor='red';blockArray[next].style.backgroundColor='red';},index*speed);}else if(isCompare===false&&isSwap===false){// un-highlight animation\nsetTimeout(function(){blockArray[curr].style.backgroundColor='#282c34';blockArray[next].style.backgroundColor='#282c34';},index*speed);}else if(isCompare===true&&isSwap===true){// swap animation\nsetTimeout(function(){numS.value++;document.getElementById(\"Swaps\").innerHTML=\"\"+numS.value;var currHeight=blockArray[next].style.height;var nextHeight=blockArray[curr].style.height;blockArray[curr].style.height=currHeight;blockArray[next].style.height=nextHeight;blockArray[curr].style.height=currHeight+'px';blockArray[next].style.height=nextHeight+'px';},index*speed);}},index*speed);})(i);};export default QuickSortUtility;","map":{"version":3,"sources":["C:/Users/Dominik Peric/Documents/MyProjects/sorting-animation/src/Utilities/QuickSortUtility.js"],"names":["numOfComparisons","numOfSwaps","wait","ms","Promise","resolve","setTimeout","QuickSortUtility","stateArray","speed","copyArr","JSON","parse","stringify","animateArr","quickSortAlgorithm","quickSortAnimation","arr","length","animations","sort","low","high","pi","partition","pivot","value","i","isLess","j","push","temp","numC","numS","_animate","index","blockArray","document","getElementsByClassName","curr","next","isCompare","isSwap","getElementById","innerHTML","style","backgroundColor","currHeight","height","nextHeight"],"mappings":"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","sourcesContent":["let numOfComparisons = 0;\nlet numOfSwaps = 0;\n/* quick sort utility */\n\n// set a timeout using a promise\nlet wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n// initiates quick sort methods\nconst QuickSortUtility = async (stateArray, speed) => {\n    let copyArr = JSON.parse(JSON.stringify(stateArray));\n    let animateArr = quickSortAlgorithm(copyArr);\n    await quickSortAnimation(animateArr, speed);\n    return [numOfComparisons, numOfSwaps];  \n}\n\n// performs quick sort on array\nconst quickSortAlgorithm = (arr) => {\n    let length = arr.length;\n    let animations = [];\n    sort(arr, 0, length - 1, animations); \n    return animations;\n}\n\n// algorithm for quick sort\nconst sort = (arr, low, high, animations) => { \n    if (low < high) { \n        // pi is partitioning index\n        let pi = partition(arr, low, high, animations); \n        // sort elements before partition and after partition \n        sort(arr, low, pi - 1, animations); \n        sort(arr, pi + 1, high, animations); \n    } \n} \n\n// sort partitioned array\nconst partition = (arr, low, high, animations)  => {\n    let pivot = arr[high].value;  \n    let i = (low-1);\n    let isLess = false;\n    // animations.push([high, high, false, true]) // highlight (NOTE: Uncomment if highlighting partition index is desired)\n    for (let j = low; j < high; j++) { \n        animations.push([j, i+1, true, false]) // highlight animation\n        numOfComparisons++;\n        if (arr[j].value < pivot) { \n            numOfSwaps++;\n            isLess = true;\n            i++;\n            // swap arr[i] and arr[j] \n            let temp = arr[i].value; \n            arr[i].value = arr[j].value; \n            arr[j].value = temp;\n            animations.push([j, i, true, true]) // swap animation\n        } \n        if (!isLess) {\n            animations.push([j, i+1, false, false]) // un-highlight animation\n        }\n        else {\n            animations.push([j, i, false, false]) // un-highlight animation\n        }\n    } \n    numOfSwaps++;\n    /* animations.push([i+1, high, true, false]) // highlight animation (NOTE: Uncomment if highlighting swap is desired) */\n    // swap arr[i+1] and arr[high] (or pivot) \n    let temp = arr[i+1].value; \n    arr[i+1].value = arr[high].value; \n    arr[high].value = temp;\n    animations.push([i+1, high, true, true]) // swap animation\n    animations.push([i+1, high, false, false]) // un-highlight animation\n    /* animations.push([j, i+1, false, false]) // un-highlight animation (NOTE: Uncomment if highlighting swap is desired) */\n    return i+1;\n} \n\n// performs quick sort animation\nconst quickSortAnimation = async (animateArr, speed) => {\n    var numC = { value: 0 };\n    var numS = { value: 0 };\n    for (let i = 0; i < animateArr.length; i++) { // perform animations\n        _animate(animateArr, speed, i, numC, numS);\n    }\n    await wait(animateArr.length * speed * 2); // wait till all animations are done\n}\n\n// perform highlight, un-highlight, or swap animation\nconst _animate = (animateArr, speed, i, numC, numS) => {\n    (function(index) {\n        setTimeout(function() {\n            let blockArray = document.getElementsByClassName('block');\n            let [curr, next, isCompare, isSwap] = animateArr[i];\n            if (isCompare === true && isSwap === false) { // highlight animation\n                setTimeout(function() {\n                    numC.value++;\n                    document.getElementById(\"Comparisons\").innerHTML = \"\" + numC.value;\n                    blockArray[curr].style.backgroundColor = 'red';\n                    blockArray[next].style.backgroundColor = 'red';\n                }, index * speed);\n            }\n            else if (isCompare === false && isSwap === false) { // un-highlight animation\n                setTimeout(function() {\n                    blockArray[curr].style.backgroundColor = '#282c34';\n                    blockArray[next].style.backgroundColor = '#282c34';\n                }, index * speed);\n            }\n            else if (isCompare === true && isSwap === true) { // swap animation\n                setTimeout(function() {\n                    numS.value++;\n                    document.getElementById(\"Swaps\").innerHTML = \"\" + numS.value;\n                    let currHeight = blockArray[next].style.height;\n                    let nextHeight = blockArray[curr].style.height;\n                    blockArray[curr].style.height = currHeight;\n                    blockArray[next].style.height = nextHeight;\n                    blockArray[curr].style.height = currHeight+'px';\n                    blockArray[next].style.height = nextHeight+'px';\n                }, index * speed);\n            }\n        }, (index) * speed);\n    })(i)\n}\n\nexport default QuickSortUtility;"]},"metadata":{},"sourceType":"module"}